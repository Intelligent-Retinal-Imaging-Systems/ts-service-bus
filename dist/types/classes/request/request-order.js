"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestOrder = void 0;
const __1 = require("../../");
/**
 * Structure containing order details
 */
class RequestOrder {
    constructor(cptCode, scheduledTime, localId, state, singleEyeOnly, missingEyeReason, additionalInfo, encounterNumber, evaluationTypes, studyInstanceUniqueId, departmentId, orderableIdentifier) {
        /**
         * Optionally specify the procedure (CPT Code)
         */
        this.CPTCode = "";
        /**
         * Order identifier as specified by the submitting organization
         */
        this.LocalId = "";
        /**
         * US State where the exam is being performed. Important for proper assignment of Graders
         */
        this.State = "";
        /**
         * If true, the exam will only include one eye as there is a known issue preventing the capture of the other eye
         */
        this.SingleEyeOnly = false; // Default to false
        /**
         * If specified, the reason that only one eye is being captured. Based on customer configuration, this could render in the final report
         */
        this.MissingEyeReason = "";
        /**
         * Any additional order specified information typically JSON embedded
         */
        this.AdditionalInfo = "";
        /**
         * Optional encounter number as generally created from the customers EMR/EHR
         */
        this.EncounterNumber = "";
        /**
         * Collection of evaluation types required for the order (which exams to perform).
         * Default to DR. Do not change without consulting IRIS support as evaluation types must
         * be subscribed to prior to submission.
         */
        this.EvaluationTypes = [__1.EvaluationType.DR];
        /**
         * Optionally supply identifier as typically originating from a DICOM source
         */
        this.StudyInstanceUniqueId = "";
        /**
         * Optionally supply the department id (specified by the submitting organization) that the exam will be fulfilled from.
         */
        this.DepartmentId = "";
        /**
         * Optionally supply identifier as is typically generated by submitting organizations EMR/EHR
         */
        this.OrderableIdentifier = "";
        if (cptCode)
            this.CPTCode = cptCode;
        if (scheduledTime)
            this.ScheduledTime = scheduledTime;
        if (localId)
            this.LocalId = localId;
        if (state)
            this.State = state;
        if (singleEyeOnly !== undefined)
            this.SingleEyeOnly = singleEyeOnly; // Allow false as a valid value
        if (missingEyeReason)
            this.MissingEyeReason = missingEyeReason;
        if (additionalInfo)
            this.AdditionalInfo = additionalInfo;
        if (encounterNumber)
            this.EncounterNumber = encounterNumber;
        if (evaluationTypes)
            this.EvaluationTypes = evaluationTypes;
        if (studyInstanceUniqueId)
            this.StudyInstanceUniqueId = studyInstanceUniqueId;
        if (departmentId)
            this.DepartmentId = departmentId;
        if (orderableIdentifier)
            this.OrderableIdentifier = orderableIdentifier;
    }
}
exports.RequestOrder = RequestOrder;
